" Boot up pathogen
call pathogen#infect()
call pathogen#helptags()

" Map my leader key
let mapleader=","

" Pick a theme
syntax on
colorscheme tomorrow-night-eighties

" Set all the things
set nocompatible
set hidden
set colorcolumn=80
set guifont=Menlo:h11
set notimeout
set ttimeout
set timeoutlen=50
set showtabline=2
set number
set numberwidth=5
set ruler
set hlsearch
set showmatch
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent " Copy indent from last line when starting new line.
set cursorline " Highlight current line
set vb
set ignorecase smartcase
set infercase
set cmdheight=2
set clipboard=unnamed
set winwidth=150
set list
set listchars=tab:▸\ ,eol:¬
set guioptions-=T
set guioptions-=r
set go-=L
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set rnu

" Relative line numbers in normal mode
autocmd InsertEnter * :set nu
autocmd InsertLeave * :set rnu
autocmd FocusLost * :set nu
autocmd FocusGained * :set rnu

" Set syntax for weird files
autocmd BufNewFile,BufRead *.master set filetype=html
autocmd BufNewFile,BufRead *.cshtml set filetype=html

" Fancy powerline
let g:Powerline_symbols = 'fancy'

" Disable arrow keys
map <Left> :echo "NOPE!"<cr>
map <Right> :echo "NOPE!"<cr>
map <Up> :echo "NOPE!"<cr>
map <Down> :echo "NOPE!"<cr>

" Strip trailing whitespace
map <leader>w :call StripTrailingWhitespaces()<cr>

" Strip trailing whitespace before save
autocmd BufWritePre * call StripTrailingWhitespaces()

" Move around splits with <c-hjkl>
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Switch between buffers
nnoremap <leader><leader> <c-^>

" Hit return to remove search highlighting
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

" Multipurpose tab key
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

" Highlight EOL whitespace, http://vim.wikia.com/wiki/Highlight_unwanted_spaces
highlight ExtraWhitespace ctermbg=darkred guibg=#ff0000
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/

" Strip trailing whitespace
function! StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfunction

